{% extends 'base.html.twig' %}

{% block title %}Hub Administrateur{% endblock %}

{% block body %}
<main class="flex flex-col items-center px-4 pt-12 py-12 min-h-screen bg-grey-950 text-white">
  <div class=" flex flex-row items-center justify-center gap-4 mb-12">
    <svg width="74" class=" text-black-950 dark:text-white" viewBox="0 0 90 73" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M27.566 47.1031C27.5886 48.2743 27.963 50.5536 28.5225 52.3328C29.7364 56.1677 31.7752 59.6914 34.496 62.6572C37.4141 65.8615 40.9761 68.4156 44.9496 70.1527C49.2731 72.0546 53.9497 73.0247 58.6742 72.9995C63.3988 73.0084 68.0722 72.023 72.3898 70.1076C76.3593 68.3559 79.9173 65.7933 82.8344 62.5851C85.5503 59.6079 87.5868 56.0777 88.8034 52.2382C89.9696 48.5193 90.2887 44.5871 89.7373 40.7292C89.2118 37.0328 87.9145 33.4878 85.9294 30.3238C84.0898 27.3802 81.7366 24.7897 78.9814 22.6751H78.9904L50.8735 1.11206L50.8013 1.058C48.956 -0.356413 45.8565 -0.351909 43.8262 1.06701C41.7734 2.49945 41.5388 4.86882 43.366 6.35981L43.357 6.36882L55.0874 15.8914L19.3412 15.9274H19.2961C16.3409 15.9319 13.4985 17.8643 12.9345 20.3148C12.3616 22.8058 14.3648 24.8688 17.4372 24.8824V24.8914L35.5517 24.8598L3.22085 49.6346L3.09903 49.7247C0.0491192 52.0581 -0.934432 55.9319 0.983042 58.3869C2.9321 60.8824 7.07836 60.8869 10.1598 58.4004L27.8006 43.986C27.8006 43.986 27.548 45.9319 27.566 47.0986V47.1031ZM72.9041 53.6211C69.2677 57.3148 64.1785 59.4139 58.6742 59.4274C53.1564 59.4364 48.0717 57.3554 44.4308 53.6662C42.6577 51.8644 41.3493 49.7968 40.5462 47.5941C39.7734 45.4493 39.4678 43.1646 39.6498 40.8925C39.8319 38.6204 40.4974 36.4132 41.6019 34.4184C42.6999 32.4461 44.1672 30.7027 45.9241 29.2833C49.5345 26.3869 54.0338 24.82 58.6652 24.8463C63.2928 24.8065 67.7926 26.3608 71.4062 29.2472C73.1626 30.6601 74.6301 32.3974 75.7285 34.3643C76.8217 36.3329 77.4873 38.5093 77.682 40.7517C77.8831 43.0495 77.5782 45.3634 76.7887 47.531C75.946 49.8156 74.6212 51.8926 72.9041 53.6211ZM46.9167 41.049C47.0103 39.5997 47.401 38.185 48.0645 36.8926C48.728 35.6002 49.6503 34.4576 50.7742 33.5355C53.1035 31.6026 56.0425 30.5543 59.0712 30.5761C62.0981 30.5573 65.0346 31.6053 67.3637 33.5355C68.4867 34.4574 69.4084 35.5994 70.0719 36.8909C70.7354 38.1825 71.1265 39.5961 71.2213 41.0445C71.3882 44.1211 70.152 46.986 67.9728 49.1076C65.5766 51.3902 62.3829 52.6491 59.0712 52.6166C55.5386 52.6166 52.3759 51.2653 50.1606 49.1031C49.0718 48.0724 48.2183 46.8193 47.6585 45.4294C47.0987 44.0395 46.8457 42.5454 46.9167 41.049Z" fill="currentColor"/>
    </svg>
    <h1 class=" text-5xl font-bold select-none text-black-950 dark:text-white">Hub Administrateur</h1>
  </div>

    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8 w-full max-w-5xl">
        <a href="{{ path('admin_users') }}" class="group bg-grey-900 hover:bg-grey-800 transition-colors rounded-xl p-6 shadow-md border border-grey-700">
            <div class="flex items-center gap-4 mb-4">
                <svg class="w-8 h-8 text-blue-400 group-hover:text-blue-300 transition" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M5.121 17.804A8.966 8.966 0 0112 15c2.136 0 4.091.747 5.61 1.996M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                </svg>
                <h2 class="text-xl font-semibold">Utilisateurs</h2>
            </div>
            <p class="text-sm text-grey-400">Afficher et gérer tous les comptes utilisateurs de la plateforme.</p>
        </a>

        <a href="{{ path('admin_collections') }}" class="group bg-grey-900 hover:bg-grey-800 transition-colors rounded-xl p-6 shadow-md border border-grey-700">
            <div class="flex items-center gap-4 mb-4">
                <svg class="w-8 h-8 text-purple-400 group-hover:text-purple-300 transition" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M3 7v10a1 1 0 001 1h16a1 1 0 001-1V7M3 7l9 6 9-6" />
                </svg>
                <h2 class="text-xl font-semibold">Collections</h2>
            </div>
            <p class="text-sm text-grey-400">Visualiser toutes les collections créées par les utilisateurs.</p>
        </a>

        <a href="{{ path('admin_logs') }}" class="group bg-grey-900 hover:bg-grey-800 transition-colors rounded-xl p-6 shadow-md border border-grey-700">
            <div class="flex items-center gap-4 mb-4">
                <svg class="w-8 h-8 text-red-400 group-hover:text-red-300 transition" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 17v-2a4 4 0 014-4h4M15 7h.01M3 21h18M3 3h18v18H3V3z" />
                </svg>
                <h2 class="text-xl font-semibold">Logs</h2>
            </div>
            <p class="text-sm text-grey-400">Consulter les actions enregistrées par les administrateurs et modérateurs.</p>
        </a>
    </div>
 


<div class="w-full max-w-5xl mt-16">
    <label for="day-select" class="block mb-2 text-white">Choisir une date :</label>
    <select id="day-select" class="w-full p-2 rounded bg-grey-800 text-white border border-grey-600"></select>
</div>

<canvas id="hourlyChart" class="my-8 w-full max-w-5xl h-[300px] bg-grey-900 rounded-xl p-4"></canvas>
<canvas id="collectionChart" class="my-12 w-full max-w-5xl h-[300px] bg-grey-900 rounded-xl p-4"></canvas>

<script id="collection-data" type="application/json">
    {{ collectionStats|json_encode|raw }}
</script>
<script id="collection-hourly-data" type="application/json">
    {{ collectionRaw|json_encode|raw }}
</script>

<script>
    const dataScript = document.getElementById('collection-data');
    const rawData = JSON.parse(dataScript.textContent); // ici on récupère ton JSON proprement

    const labels = rawData.map(e => e.date);
    const data = rawData.map(e => parseInt(e.count));

    const ctx = document.getElementById('collectionChart').getContext('2d');
    new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [{
                label: 'Collections créées par jour',
                data: data,
                borderWidth: 2,
                tension: 0.3
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { labels: { color: 'white' } },
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: { color: 'white' },
                    grid: { color: '#444' }
                },
                x: {
                    ticks: { color: 'white', autoSkip: true, maxTicksLimit: 10 },
                    grid: { color: '#444' }
                }
            }
        }
    });
</script>
<script>
    const rawHourlyData = JSON.parse(document.getElementById('collection-hourly-data').textContent);
    const select = document.getElementById('day-select');
    const hourlyCtx = document.getElementById('hourlyChart').getContext('2d');

    // Grouper les dates uniques pour le select
    const availableDays = [...new Set(rawHourlyData.map(e => e.date.slice(0, 10)))];
    availableDays.forEach(date => {
        const option = document.createElement('option');
        option.value = date;
        option.textContent = date;
        select.appendChild(option);
    });

    let hourlyChart;

    // Générer le graphique par heure
    function renderHourlyChart(day) {
        const filtered = rawHourlyData.filter(e => e.date.startsWith(day));
        const hoursCount = Array(24).fill(0);

        filtered.forEach(e => {
            const hour = parseInt(e.date.slice(11, 13));
            hoursCount[hour]++;
        });

        const labels = Array.from({ length: 24 }, (_, i) => `${i.toString().padStart(2, '0')}:00`);

        if (hourlyChart) hourlyChart.destroy();

        hourlyChart = new Chart(hourlyCtx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: `Collections créées le ${day}`,
                    data: hoursCount,
                    borderWidth: 2,
                    tension: 0.3,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { labels: { color: 'white' } }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: { color: 'white' },
                        grid: { color: '#444' }
                    },
                    x: {
                        ticks: { color: 'white' },
                        grid: { color: '#444' }
                    }
                }
            }
        });
    }

    // Initialiser avec le 1er jour
    renderHourlyChart(availableDays[0]);
    select.addEventListener('change', (e) => renderHourlyChart(e.target.value));

</script>

 
</main>
{% endblock %}
